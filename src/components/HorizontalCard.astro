---
const {
  title,
  img,
  desc,
  url,
  badge,
  tags,
  target = "_blank",
  // Expect authors as an array of objects: { name: 'Author Name', homepage: 'https://...' }
  authors = [],
  publicationInfo,
  bibCitation, // BibTeX text for modal (if provided)
  bibUrl,      // Fallback link if no bibCitation provided
  arxivUrl,
  projectUrl
} = Astro.props;

import { Image } from "astro:assets";
const tag_url = url.split("/").slice(0, -1).join("/") + "/tag";
---

<div class="rounded-lg bg-base-100 shadow-xl p-4 relative z-0">
  <div class="flex flex-col md:flex-row items-start gap-4">
    {img && (
      <a href={url} target={target} class="block">
        <Image
          src={img}
          width={750}
          height={422}
          format="webp"
          alt={title}
          class="rounded-lg max-w-full md:max-w-[13rem]"
        />
      </a>
    )}

    <div class="grow">
      <h1 class="text-xl font-bold">
        <a href={url} target={target} class="hover:underline">
          {title}
        </a>
        {badge && (
          <span class="badge badge-info ml-2 font-bold">{badge}</span>
        )}
      </h1>

      {/* Render each author as a clickable link.
          The first author inherits the title's color and is bold,
          while the remaining authors use a lighter color for contrast. */}
      {authors && authors.length > 0 && (
        <p class="text-sm italic">
          {authors.map((author, index) => (
            <span key={author.name}>
              <a
                href={author.homepage}
                target="_blank"
                class={`${index === 0 ? "font-bold hover:underline" : "text-gray-500 hover:underline"}`}
              >
                {author.name}
              </a>
              {index < authors.length - 1 && ", "}
            </span>
          ))}
        </p>
      )}

      {publicationInfo && (
        <p class="text-sm text-gray-600">{publicationInfo}</p>
      )}

      {desc && (
        <p class="mt-2 text-base">{desc}</p>
      )}

      {/* Button container */}
      <div class="flex flex-wrap items-center gap-2 mt-2 relative z-10">
        {tags && tags.map((tag) => (
          <a
            href={`${tag_url}/${tag}`}
            class="badge badge-outline font-bold"
            key={tag}
          >
            {tag}
          </a>
        ))}

        {/* BIB button: if bibCitation is provided, open a modal; otherwise, link to bibUrl */}
        {bibCitation ? (
          <label for={`${title}-bib-modal`} class="badge badge-secondary font-bold cursor-pointer">
            BIB
          </label>
        ) : (
          bibUrl && (
            <a
              href={bibUrl}
              target={target}
              class="badge badge-secondary font-bold"
            >
              BIB
            </a>
          )
        )}

        {arxivUrl && (
          <a
            href={arxivUrl}
            target={target}
            class="badge badge-secondary font-bold"
          >
            ArXiv
          </a>
        )}
        {projectUrl && (
          <a
            href={projectUrl}
            target={target}
            class="badge badge-secondary font-bold"
          >
            Project
          </a>
        )}
      </div>
    </div>
  </div>
</div>

{/* Modal markup placed outside the card */}
{bibCitation && (
  <>
    <input type="checkbox" id={`${title}-bib-modal`} class="modal-toggle" />
    <div class="modal fixed inset-0 z-50">
      <div class="modal-box bg-base-100">
        <h3 class="font-bold text-lg">BibTeX</h3>
        <pre class="bg-base-200 p-2 rounded text-sm whitespace-pre overflow-x-auto">
{bibCitation}
        </pre>
        <div class="modal-action">
          <label for={`${title}-bib-modal`} class="badge badge-secondary font-bold cursor-pointer">
            Close
          </label>
        </div>
      </div>
    </div>
  </>
)}
